# handlers/publish_vk.py
from telebot.types import CallbackQuery
from config import VK_GROUP_ID
from state import user_drafts, store_lock
from utils.tg_utils import smart_vk_text
from utils.vk_utils import vk_publish_text, vk_post_url, vk_publish_with_image_required
import logging

log = logging.getLogger("tg-vk-bot")


def register(bot):
    @bot.callback_query_handler(func=lambda c: c.data == "publish_vk_photo")
    def publish_vk_photo(call: CallbackQuery):
        chat_id = call.message.chat.id
        with store_lock:
            draft = user_drafts.get(chat_id)

        if not draft:
            bot.answer_callback_query(call.id, "‚ùå –ù–µ—Ç —á–µ—Ä–Ω–æ–≤–∏–∫–∞")
            return

        bot.answer_callback_query(call.id, "–ü—É–±–ª–∏–∫—É–µ–º –≤ VK‚Ä¶")
        try:
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é —Å –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –ø—É–±–ª–∏–∫–∞—Ü–∏–µ–π —Å –∫–∞—Ä—Ç–∏–Ω–∫–æ–π
            post_id = vk_publish_with_image_required(VK_GROUP_ID, draft["image_bytes"], smart_vk_text(draft["text"]))
            url = vk_post_url(VK_GROUP_ID, post_id)
            bot.send_message(chat_id, f"‚úÖ –û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ —Å –∫–∞—Ä—Ç–∏–Ω–∫–æ–π: {url}")
        except Exception as e:
            log.exception("VK post with image failed completely")
            bot.answer_callback_query(call.id, "‚ùå –û—à–∏–±–∫–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –≤ VK")
            bot.send_message(chat_id, f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –ø–æ—Å—Ç —Å –∫–∞—Ä—Ç–∏–Ω–∫–æ–π –≤ VK: {e}")
            bot.send_message(chat_id, "üîß –ü—Ä–æ–≤–µ—Ä—å—Ç–µ VK —Ç–æ–∫–µ–Ω –∏ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞")

    @bot.callback_query_handler(func=lambda c: c.data == "publish_vk_text")
    def publish_vk_text_only(call: CallbackQuery):
        """–ü—ã—Ç–∞–µ—Ç—Å—è –æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å —Å –∫–∞—Ä—Ç–∏–Ω–∫–æ–π, –µ—Å–ª–∏ –Ω–µ –ø–æ–ª—É—á–∞–µ—Ç—Å—è - —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç"""
        chat_id = call.message.chat.id
        with store_lock:
            draft = user_drafts.get(chat_id)

        if not draft:
            bot.answer_callback_query(call.id, "‚ùå –ù–µ—Ç —á–µ—Ä–Ω–æ–≤–∏–∫–∞")
            return

        bot.answer_callback_query(call.id, "–ü—É–±–ª–∏–∫—É–µ–º –≤ VK‚Ä¶")

        # –°–Ω–∞—á–∞–ª–∞ –ø—ã—Ç–∞–µ–º—Å—è —Å –∫–∞—Ä—Ç–∏–Ω–∫–æ–π
        try:
            post_id = vk_publish_with_image_required(VK_GROUP_ID, draft["image_bytes"], smart_vk_text(draft["text"]))
            url = vk_post_url(VK_GROUP_ID, post_id)
            bot.send_message(chat_id, f"‚úÖ –û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ —Å –∫–∞—Ä—Ç–∏–Ω–∫–æ–π: {url}")
            return
        except Exception as e:
            log.warning(f"VK post with image failed, trying text only: {e}")

        # –ï—Å–ª–∏ –Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å —Å –∫–∞—Ä—Ç–∏–Ω–∫–æ–π - –ø—É–±–ª–∏–∫—É–µ–º —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç
        try:
            post_id = vk_publish_text(VK_GROUP_ID, smart_vk_text(draft["text"]))
            url = vk_post_url(VK_GROUP_ID, post_id)
            bot.send_message(chat_id, f"‚úÖ –û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ (—Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç): {url}")
            bot.send_message(chat_id, "‚ö†Ô∏è –ö–∞—Ä—Ç–∏–Ω–∫–∞ –Ω–µ –∑–∞–≥—Ä—É–∑–∏–ª–∞—Å—å, –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç")
        except Exception as e:
            log.exception("VK text post error")
            bot.answer_callback_query(call.id, "‚ùå –û—à–∏–±–∫–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ —Ç–µ–∫—Å—Ç–∞")
            bot.send_message(chat_id, f"‚ùå –û—à–∏–±–∫–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –≤ VK: {e}")
